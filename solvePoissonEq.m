function[Pc_new] = solvePoissonEq(Pc, UNs, VNs, NF, DX, nx, ny, rho, Ds)

% 液体 NF = 0, 右液の垂直左表面 NF = 1, 左液の垂直右表面 NF = 2,
% 上表面 NF = 5, 気体 NF = 8，壁，床及び天井 NF =  9

Pc_new = Pc;
ite_max = 2000;
eps  = 0.0001;

for k = 1 : ite_max
    
    for i = 2 : nx + 1
        for j = 2 : ny + 1
            
            if  NF(i, j) ~= 0 % 液体以外は圧力０
                
                Pc_new(i, j) = 0;
                
            elseif NF(i + 1, j) == 9 && NF(i, j - 1) == 9 % 左下角部分を抽出。
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2)) + Pc_new(i, j + 1) * (1/(DX^2)) ...
                    - (Ds(i,j)))...
                    /(1/(DX^2)+(1/(DX^2)));
                
            elseif  NF(i + 1, j) == 9 && NF(i, j + 1) == 9 % 右下角部分を抽出。
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2)) ...
                    + Pc_new(i, j - 1) * (1/(DX^2)) ...
                    - (Ds(i,j)))/(1/(DX^2)...
                    +(1/(DX^2)));
                
            elseif NF(i - 1, j) == 9 && NF(i, j - 1) == 9 % 左上角部分を抽出。
                
                Pc_new(i, j) = (Pc_new(i + 1, j) * (1/(DX^2)) + Pc_new(i, j + 1) * (1/(DX^2)) ...
                    - (Ds(i,j)))...
                    /(1/(DX^2)+(1/(DX^2)));
                
            elseif NF(i - 1, j) == 9 && NF(i, j + 1) == 9 % 右上角部分を抽出。
                
                Pc_new(i, j) = (Pc_new(i + 1, j) * (1/(DX^2)) + Pc_new(i, j - 1) * (1/(DX^2)) ...
                    - (Ds(i,j)))...
                    /(1/(DX^2)+(1/(DX^2)));
                
            elseif NF(i + 1, j) == 9 % 床面隣接要素
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2))...
                    + Pc_new(i, j - 1) * (1/(DX^2))...
                    + Pc_new(i, j + 1) * (1/(DX^2))...
                    - (Ds(i,j)))/(1/(DX^2)...
                    +(1/(DX^2))...
                    +(1/(DX^2)));
                
            elseif NF(i, j - 1) == 9 % 左壁面隣接要素を抽出
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2))...
                    + Pc_new(i + 1, j) * (1/(DX^2))...
                    + Pc_new(i, j + 1) * (1/(DX^2))...
                    - (Ds(i,j)))/(1/(DX^2)...
                    +(1/(DX^2))...
                    +(1/(DX^2)));
                
            elseif NF(i, j + 1) == 9 % 右壁面隣接要素を抽出
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2)) ...
                    + Pc_new(i + 1, j) * (1/(DX^2))...
                    + Pc_new(i, j - 1) * (1/(DX^2))...
                    - (Ds(i,j)))/(1/(DX^2)...
                    + (1/(DX^2))...
                    + (1/(DX^2)));
                
            elseif NF(i - 1, j) == 9 % 天井への隣接要素
                
                Pc_new(i, j) = (Pc_new(i + 1, j) * (1/(DX^2)) ...
                    + Pc_new(i, j + 1) * (1/(DX^2))...
                    + Pc_new(i, j - 1) * (1/(DX^2))...
                    - (Ds(i,j)))/(1/(DX^2)...
                    + (1/(DX^2))...
                    + (1/(DX^2)));
            else
                
                Pc_new(i, j) = (Pc_new(i - 1, j) * (1/(DX^2)) ...
                    + Pc_new(i + 1, j) * (1/(DX^2))...
                    + Pc_new(i, j - 1) * (1/(DX^2)) ...
                    + Pc_new(i, j + 1) * (1/(DX^2))  ...
                    - (Ds(i,j)))/(1/(DX^2)...
                    +(1/(DX^2))...
                    +(1/(DX^2))...
                    +(1/(DX^2)));
                
            end
            
        end
    end
    
    % 残差の計算
    error(k, 1) = max(max(abs(Pc_new - Pc)));
    if k ~= 1
        error(k, 1) = min(error(k, 1), error(k - 1, 1));
    end
    
    % 収束判定
    if  error(k, 1) < eps
        break;
    end
    
    % 値の更新
    Pc = Pc_new;
    
end

end
